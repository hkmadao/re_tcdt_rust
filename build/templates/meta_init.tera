//! entity meta_init.rs file. Generated by build, if necessary please change in build/templates/meta_init.tera
use crate::meta;
use crate::common::desc::EntityDesc;
use lazy_static::lazy_static;
use std::collections::HashMap;

// pub static mut DESC_MAP: Option<&mut HashMap<String, EntityDesc>> = None;

// pub fn init_desc() {
//     let mut desc_map: HashMap<String, EntityDesc> = HashMap::new();
//     unsafe { DESC_MAP = Some(Box::leak(Box::new(desc_map))) };
// }

lazy_static! {
    pub static ref DESC_MAP: HashMap<String, &'static mut EntityDesc> = {
        let mut desc_map = HashMap::new();
{%- for name_info in name_info_list %}
            desc_map.insert("{{name_info.pascal_name}}".to_owned(), Box::leak(Box::new(meta::{{name_info.snake_name}}_desc::get_{{name_info.snake_name}}_desc())));
{%- endfor %}
        desc_map
    };
}
